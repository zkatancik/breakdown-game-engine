#include "graverunner/GameManager.hpp"

GameManager &GameManager::getInstance() {
  static GameManager *instance = new GameManager();
  return *instance;
}

void GameManager::startUp(int w, int h) {
  // InGame - BG
  background = ResourceManager::getInstance().getTexture(BACKGROUND_IMAGE);
  bg_dest.w = w;
  bg_dest.h = h;
  bg_dest.x = 0;
  bg_dest.y = 0;
  currentLevelNumber = 1;
  // Music Volume adjustment
  Mix_VolumeMusic(MIX_MAX_VOLUME / 6);
  Mix_PlayMusic(
      ResourceManager::getInstance().getMusic("ClassicsIV-Spooky.wav"), -1);
  Mix_Volume(0, MIX_MAX_VOLUME);
  Mix_Volume(1, MIX_MAX_VOLUME / 6);
}

void GameManager::shutDown() {
}

void GameManager::update() {
  if (isGameStarted()) {
    currentLevel->update();
    score = int(jack->GetNumCollectedKeys());
    if (isGameEnd()) {
      gameState_ = GameState::GameEnd;
    }

    if (InputManager::getInstance().isKeyDown(SDLK_x)) {
      updateLevel();
      gameState_ = GameState::GameEnd;
    }
  }
}

void GameManager::render(SDL_Renderer *ren) {
  if (isGameStarted()) {
    // In game BG
    SDL_RenderCopy(ren, background, NULL, &bg_dest);

    currentLevel->render(ren);
  }
}

GameManager::GameState GameManager::getGameState() { return gameState_; }

void GameManager::setGameState(GameState gs) { gameState_ = gs; }

bool GameManager::isGameStarted() { return (gameState_ == GameState::InGame); }

bool GameManager::isGameEnd() { return !jack->isAlive() || isGameWon(); }

int GameManager::getScoreVal() { return score; }

int GameManager::getLevelVal() { return currentLevelNumber; }


void GameManager::clearLevel() {
  // Clear Level.

  rowsOfBlocks = 0;
  blocksPerRow = 0;
  currentLevel = nullptr;

  score = 0;
}

bool GameManager::isGameWon() {
  return !currentLevel->FindObject(exitBlock);
}

void GameManager::updateLevel() {
  if (currentLevelNumber < MAX_LEVEL) {
    currentLevelNumber++;
  } else {
    // Reset levels after all are passed.
    currentLevelNumber = 1;
  }
}
